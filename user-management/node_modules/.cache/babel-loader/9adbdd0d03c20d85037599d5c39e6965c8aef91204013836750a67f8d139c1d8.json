{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\user-management\\\\src\\\\components\\\\UserForm.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n\n// const UserForm = ({ user, onSave, onCancel }) => {\n//   const [formData, setFormData] = useState({\n//     id: user?.id || \"\",\n//     firstName: user?.name?.split(\" \")[0] || \"\",\n//     lastName: user?.name?.split(\" \")[1] || \"\",\n//     email: user?.email || \"\",\n//     department: user?.department || \"\",\n//   });\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     const updatedUser = {\n//       id: formData.id,\n//       name: `${formData.firstName} ${formData.lastName}`,\n//       email: formData.email,\n//       department: formData.department,\n//     };\n//     onSave(updatedUser);\n//   };\n\n//   return (\n//     <form className=\"user-form\" onSubmit={handleSubmit}>\n//       <h3>{user ? \"Edit User\" : \"Add User\"}</h3>\n//       <div>\n//         <label>First Name:</label>\n//         <input\n//           name=\"firstName\"\n//           value={formData.firstName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Last Name:</label>\n//         <input\n//           name=\"lastName\"\n//           value={formData.lastName}\n//           onChange={handleChange}\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Email:</label>\n//         <input\n//           name=\"email\"\n//           value={formData.email}\n//           onChange={handleChange}\n//           type=\"email\"\n//           required\n//         />\n//       </div>\n//       <div>\n//         <label>Department:</label>\n//         <input\n//           name=\"department\"\n//           value={formData.department}\n//           onChange={handleChange}\n//         />\n//       </div>\n//       <button type=\"submit\">Save</button>\n//       <button type=\"button\" onClick={onCancel}>\n//         Cancel\n//       </button>\n//     </form>\n//   );\n// };\n\n// export default UserForm;\n\n// UserForm.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  mode,\n  handleAddUser,\n  handleEditUser\n}) => {\n  _s();\n  const [user, setUser] = useState({\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    department: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    if (mode === \"edit\") {\n      axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then(response => {\n        const userData = response.data;\n        setUser({\n          id: userData.id,\n          firstName: userData.name.split(\" \")[0],\n          lastName: userData.name.split(\" \")[1],\n          email: userData.email,\n          department: userData.department || \"\"\n        });\n      });\n    }\n  }, [id, mode]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser({\n      ...user,\n      [name]: value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (mode === \"add\") {\n      axios.post(\"https://jsonplaceholder.typicode.com/users\", user).then(response => {\n        const newUser = response.data; // You can mock the created user response\n        handleAddUser(newUser);\n        alert(\"User added successfully!\");\n        navigate(\"/\");\n      });\n    } else if (mode === \"edit\") {\n      axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, user).then(() => {\n        handleEditUser(user);\n        alert(\"User updated successfully!\");\n        navigate(\"/\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: mode === \"add\" ? \"Add New User\" : \"Edit User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"id\",\n          value: user.id,\n          onChange: handleChange,\n          required: true,\n          disabled: mode === \"edit\" // Disable ID input in edit mode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"First Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"firstName\",\n          value: user.firstName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Last Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"lastName\",\n          value: user.lastName,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          value: user.email,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Department:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"department\",\n          value: user.department,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(\"/\"),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"04a6eiFZa2J59TEvE8eC9QHT2cY=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","UserForm","mode","handleAddUser","handleEditUser","_s","user","setUser","id","firstName","lastName","email","department","navigate","get","then","response","userData","data","name","split","handleChange","e","value","target","handleSubmit","preventDefault","post","newUser","alert","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","required","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/assignment/user-management/src/components/UserForm.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// const UserForm = ({ user, onSave, onCancel }) => {\r\n//   const [formData, setFormData] = useState({\r\n//     id: user?.id || \"\",\r\n//     firstName: user?.name?.split(\" \")[0] || \"\",\r\n//     lastName: user?.name?.split(\" \")[1] || \"\",\r\n//     email: user?.email || \"\",\r\n//     department: user?.department || \"\",\r\n//   });\r\n\r\n//   const handleChange = (e) => {\r\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     const updatedUser = {\r\n//       id: formData.id,\r\n//       name: `${formData.firstName} ${formData.lastName}`,\r\n//       email: formData.email,\r\n//       department: formData.department,\r\n//     };\r\n//     onSave(updatedUser);\r\n//   };\r\n\r\n//   return (\r\n//     <form className=\"user-form\" onSubmit={handleSubmit}>\r\n//       <h3>{user ? \"Edit User\" : \"Add User\"}</h3>\r\n//       <div>\r\n//         <label>First Name:</label>\r\n//         <input\r\n//           name=\"firstName\"\r\n//           value={formData.firstName}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label>Last Name:</label>\r\n//         <input\r\n//           name=\"lastName\"\r\n//           value={formData.lastName}\r\n//           onChange={handleChange}\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label>Email:</label>\r\n//         <input\r\n//           name=\"email\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//           type=\"email\"\r\n//           required\r\n//         />\r\n//       </div>\r\n//       <div>\r\n//         <label>Department:</label>\r\n//         <input\r\n//           name=\"department\"\r\n//           value={formData.department}\r\n//           onChange={handleChange}\r\n//         />\r\n//       </div>\r\n//       <button type=\"submit\">Save</button>\r\n//       <button type=\"button\" onClick={onCancel}>\r\n//         Cancel\r\n//       </button>\r\n//     </form>\r\n//   );\r\n// };\r\n\r\n// export default UserForm;\r\n\r\n\r\n// UserForm.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst UserForm = ({ mode, handleAddUser, handleEditUser }) => {\r\n  const [user, setUser] = useState({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    department: \"\",\r\n  });\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    if (mode === \"edit\") {\r\n      axios.get(`https://jsonplaceholder.typicode.com/users/${id}`).then((response) => {\r\n        const userData = response.data;\r\n        setUser({\r\n          id: userData.id,\r\n          firstName: userData.name.split(\" \")[0],\r\n          lastName: userData.name.split(\" \")[1],\r\n          email: userData.email,\r\n          department: userData.department || \"\",\r\n        });\r\n      });\r\n    }\r\n  }, [id, mode]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setUser({ ...user, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (mode === \"add\") {\r\n      axios.post(\"https://jsonplaceholder.typicode.com/users\", user).then((response) => {\r\n        const newUser = response.data; // You can mock the created user response\r\n        handleAddUser(newUser);\r\n        alert(\"User added successfully!\");\r\n        navigate(\"/\");\r\n      });\r\n    } else if (mode === \"edit\") {\r\n      axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, user).then(() => {\r\n        handleEditUser(user);\r\n        alert(\"User updated successfully!\");\r\n        navigate(\"/\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>{mode === \"add\" ? \"Add New User\" : \"Edit User\"}</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          ID:\r\n          <input\r\n            type=\"text\"\r\n            name=\"id\"\r\n            value={user.id}\r\n            onChange={handleChange}\r\n            required\r\n            disabled={mode === \"edit\"} // Disable ID input in edit mode\r\n          />\r\n        </label>\r\n        <label>\r\n          First Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            value={user.firstName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Last Name:\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            value={user.lastName}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={user.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <label>\r\n          Department:\r\n          <input\r\n            type=\"text\"\r\n            name=\"department\"\r\n            value={user.department}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n      <button onClick={() => navigate(\"/\")}>Cancel</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}