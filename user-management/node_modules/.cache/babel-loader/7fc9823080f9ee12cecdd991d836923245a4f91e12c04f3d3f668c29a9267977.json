{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\user-management\\\\src\\\\components\\\\UserList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Department</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name.split(\" \")[0]}</td>\n//               <td>{user.name.split(\" \")[1]}</td>\n//               <td>{user.email}</td>\n//               <td>{user.department || \"N/A\"}</td>\n//               <td>\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n\n//     <button className=\"btn-add\" onClick={handleAdd}>\n//         Add User\n//       </button>\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   // Styles\n//   const tableStyle = {\n//     width: \"100%\",\n//     borderCollapse: \"collapse\",\n//     marginBottom: \"20px\",\n//     overflowX: \"auto\",\n//   };\n\n//   const thStyle = {\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     padding: \"10px\",\n//     textAlign: \"left\",\n//   };\n\n//   const tdStyle = {\n//     border: \"1px solid #ddd\",\n//     padding: \"8px\",\n//     textAlign: \"left\",\n//   };\n\n//   const buttonStyle = {\n//     padding: \"8px 12px\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"14px\",\n//     marginRight: \"5px\",\n//   };\n\n//   const editButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//   };\n\n//   const deleteButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#f44336\",\n//     color: \"white\",\n//   };\n\n//   const addButtonStyle = {\n//     padding: \"10px 20px\",\n//     backgroundColor: \"#008CBA\",\n//     color: \"white\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"16px\",\n//     marginBottom: \"20px\",\n//     display: \"block\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   };\n\n//   const errorStyle = {\n//     color: \"red\",\n//     fontSize: \"16px\",\n//     textAlign: \"center\",\n//     marginTop: \"20px\",\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <table style={tableStyle}>\n//         <thead>\n//           <tr>\n//             <th style={thStyle}>ID</th>\n//             <th style={thStyle}>First Name</th>\n//             <th style={thStyle}>Last Name</th>\n//             <th style={thStyle}>Email</th>\n//             <th style={thStyle}>Department</th>\n//             <th style={thStyle}>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td style={tdStyle}>{user.id}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\n//               <td style={tdStyle}>{user.email}</td>\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\n//               <td style={tdStyle}>\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\n//                   Edit\n//                 </button>\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\n//         Add User\n//       </button>\n//       {error && <p style={errorStyle}>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n// import './UserList.css';  // Import the external CSS file\n\n// const UserList = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState(\"\");\n//     const [showForm, setShowForm] = useState(false);\n//     const [editingUser, setEditingUser] = useState(null);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//                 setUsers(response.data);\n//             } catch (err) {\n//                 setError(\"Failed to fetch users. Please try again later.\");\n//             }\n//         };\n//         fetchUsers();\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//             setUsers(users.filter((user) => user.id !== id));\n//         } catch {\n//             setError(\"Failed to delete the user. Please try again.\");\n//         }\n//     };\n\n//     const handleEdit = (user) => {\n//         setEditingUser(user);\n//         setShowForm(true);\n//     };\n\n//     const handleAdd = () => {\n//         setEditingUser(null);\n//         setShowForm(true);\n//     };\n\n//     const handleSave = (newUser) => {\n//         if (editingUser) {\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//         } else {\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\n//         }\n//         setShowForm(false);\n//     };\n\n//     return (\n//         <div className=\"user-list-container\">\n//             <h2>User List</h2>\n\n//             <table className=\"user-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>First Name</th>\n//                         <th>Last Name</th>\n//                         <th>Email</th>\n//                         <th>Department</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.id}>\n//                             <td>{user.id}</td>\n//                             <td>{user.name.split(\" \")[0]}</td>\n//                             <td>{user.name.split(\" \")[1]}</td>\n//                             <td>{user.email}</td>\n//                             <td>{user.department || \"N/A\"}</td>\n//                             <td>\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             {showForm && (\n//                 <UserForm\n//                     user={editingUser}\n//                     onSave={handleSave}\n//                     onCancel={() => setShowForm(false)}\n//                 />\n//             )}\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\n//             {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default UserList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserForm from \"./UserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(5); // Show 5 users per page\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n        setUsers(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch users. Please try again later.\");\n      }\n    };\n    fetchUsers();\n  }, []);\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const totalPages = Math.ceil(users.length / usersPerPage);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      setUsers(users.filter(user => user.id !== id));\n    } catch {\n      setError(\"Failed to delete the user. Please try again.\");\n    }\n  };\n  const handleEdit = user => {\n    setEditingUser(user);\n    setShowForm(true);\n  };\n  const handleAdd = () => {\n    setEditingUser(null);\n    setShowForm(true);\n  };\n  const handleSave = newUser => {\n    if (editingUser) {\n      setUsers(users.map(user => user.id === newUser.id ? newUser : user));\n    } else {\n      setUsers([...users, {\n        ...newUser,\n        id: Date.now()\n      }]);\n    }\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        style: {\n          width: \"100%\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name.split(\" \")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name.split(\" \")[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.department || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(user),\n                className: \"edit-btn\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user.id),\n                className: \"delete-btn\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 453,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: \"center\"\n        },\n        children: Array.from({\n          length: totalPages\n        }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => paginate(index + 1),\n          style: {\n            padding: \"8px 12px\",\n            margin: \"0 5px\",\n            cursor: \"pointer\",\n            backgroundColor: \"#008CBA\",\n            color: \"white\",\n            borderRadius: \"4px\"\n          },\n          children: index + 1\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        style: {\n          padding: \"10px 20px\",\n          backgroundColor: \"#008CBA\",\n          color: \"white\",\n          borderRadius: \"4px\",\n          display: \"block\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\"\n        },\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-form-container\",\n      style: {\n        marginTop: \"30px\",\n        border: \"1px solid #ddd\",\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(UserForm, {\n        user: editingUser,\n        onSave: handleSave,\n        onCancel: () => setShowForm(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 425,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"671gOClJ/mvkVxNGuxXWvffH/xo=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserForm","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","error","setError","showForm","setShowForm","editingUser","setEditingUser","currentPage","setCurrentPage","usersPerPage","fetchUsers","response","get","data","err","indexOfLastUser","indexOfFirstUser","currentUsers","slice","paginate","pageNumber","totalPages","Math","ceil","length","handleDelete","id","delete","filter","user","handleEdit","handleAdd","handleSave","newUser","map","Date","now","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","className","width","borderCollapse","name","split","email","department","onClick","textAlign","Array","from","_","index","margin","cursor","backgroundColor","color","borderRadius","marginBottom","display","marginLeft","marginRight","marginTop","border","onSave","onCancel","_c","$RefreshReg$"],"sources":["D:/assignment/user-management/src/components/UserList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Department</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.id}</td>\r\n//               <td>{user.name.split(\" \")[0]}</td>\r\n//               <td>{user.name.split(\" \")[1]}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.department || \"N/A\"}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//     <button className=\"btn-add\" onClick={handleAdd}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   // Styles\r\n//   const tableStyle = {\r\n//     width: \"100%\",\r\n//     borderCollapse: \"collapse\",\r\n//     marginBottom: \"20px\",\r\n//     overflowX: \"auto\",\r\n//   };\r\n\r\n//   const thStyle = {\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     padding: \"10px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const tdStyle = {\r\n//     border: \"1px solid #ddd\",\r\n//     padding: \"8px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: \"8px 12px\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"14px\",\r\n//     marginRight: \"5px\",\r\n//   };\r\n\r\n//   const editButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const deleteButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#f44336\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const addButtonStyle = {\r\n//     padding: \"10px 20px\",\r\n//     backgroundColor: \"#008CBA\",\r\n//     color: \"white\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"16px\",\r\n//     marginBottom: \"20px\",\r\n//     display: \"block\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   };\r\n\r\n//   const errorStyle = {\r\n//     color: \"red\",\r\n//     fontSize: \"16px\",\r\n//     textAlign: \"center\",\r\n//     marginTop: \"20px\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <table style={tableStyle}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th style={thStyle}>ID</th>\r\n//             <th style={thStyle}>First Name</th>\r\n//             <th style={thStyle}>Last Name</th>\r\n//             <th style={thStyle}>Email</th>\r\n//             <th style={thStyle}>Department</th>\r\n//             <th style={thStyle}>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td style={tdStyle}>{user.id}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\r\n//               <td style={tdStyle}>{user.email}</td>\r\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\r\n//               <td style={tdStyle}>\r\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\r\n//                   Edit\r\n//                 </button>\r\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p style={errorStyle}>{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n// import './UserList.css';  // Import the external CSS file\r\n\r\n// const UserList = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [error, setError] = useState(\"\");\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [editingUser, setEditingUser] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchUsers = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//                 setUsers(response.data);\r\n//             } catch (err) {\r\n//                 setError(\"Failed to fetch users. Please try again later.\");\r\n//             }\r\n//         };\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//             setUsers(users.filter((user) => user.id !== id));\r\n//         } catch {\r\n//             setError(\"Failed to delete the user. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (user) => {\r\n//         setEditingUser(user);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleAdd = () => {\r\n//         setEditingUser(null);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleSave = (newUser) => {\r\n//         if (editingUser) {\r\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//         } else {\r\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//         }\r\n//         setShowForm(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"user-list-container\">\r\n//             <h2>User List</h2>\r\n\r\n//             <table className=\"user-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>ID</th>\r\n//                         <th>First Name</th>\r\n//                         <th>Last Name</th>\r\n//                         <th>Email</th>\r\n//                         <th>Department</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.id}>\r\n//                             <td>{user.id}</td>\r\n//                             <td>{user.name.split(\" \")[0]}</td>\r\n//                             <td>{user.name.split(\" \")[1]}</td>\r\n//                             <td>{user.email}</td>\r\n//                             <td>{user.department || \"N/A\"}</td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\r\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             {showForm && (\r\n//                 <UserForm\r\n//                     user={editingUser}\r\n//                     onSave={handleSave}\r\n//                     onCancel={() => setShowForm(false)}\r\n//                 />\r\n//             )}\r\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage] = useState(5); // Show 5 users per page\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        setUsers(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch users. Please try again later.\");\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  const totalPages = Math.ceil(users.length / usersPerPage);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      setUsers(users.filter((user) => user.id !== id));\r\n    } catch {\r\n      setError(\"Failed to delete the user. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingUser(user);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setEditingUser(null);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleSave = (newUser) => {\r\n    if (editingUser) {\r\n      setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n    } else {\r\n      setUsers([...users, { ...newUser, id: Date.now() }]);\r\n    }\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User List</h2>\r\n\r\n      {/* User List Table */}\r\n      <div className=\"user-list-container\">\r\n        <table className=\"user-table\" style={{ width: \"100%\", borderCollapse: \"collapse\" }}>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Department</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {currentUsers.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.name.split(\" \")[0]}</td>\r\n                <td>{user.name.split(\" \")[1]}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.department || \"N/A\"}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(user)} className=\"edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Pagination Buttons */}\r\n        <div style={{ textAlign: \"center\" }}>\r\n          {Array.from({ length: totalPages }, (_, index) => (\r\n            <button\r\n              key={index}\r\n              onClick={() => paginate(index + 1)}\r\n              style={{\r\n                padding: \"8px 12px\",\r\n                margin: \"0 5px\",\r\n                cursor: \"pointer\",\r\n                backgroundColor: \"#008CBA\",\r\n                color: \"white\",\r\n                borderRadius: \"4px\",\r\n              }}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add User Button placed outside the list */}\r\n      <div style={{ marginBottom: \"20px\" }}>\r\n        <button\r\n          onClick={handleAdd}\r\n          style={{\r\n            padding: \"10px 20px\",\r\n            backgroundColor: \"#008CBA\",\r\n            color: \"white\",\r\n            borderRadius: \"4px\",\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        >\r\n          Add User\r\n        </button>\r\n      </div>\r\n\r\n      {/* Conditionally render the user form outside the user list */}\r\n      {showForm && (\r\n        <div className=\"user-form-container\" style={{ marginTop: \"30px\", border: \"1px solid #ddd\", padding: \"20px\" }}>\r\n          <UserForm user={editingUser} onSave={handleSave} onCancel={() => setShowForm(false)} />\r\n        </div>\r\n      )}\r\n\r\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM,CAACgB,WAAW,EAAEC,cAAc,CAAC,GAAGjB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACkB,YAAY,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEpCC,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,4CAA4C,CAAC;QAC9EZ,QAAQ,CAACW,QAAQ,CAACE,IAAI,CAAC;MACzB,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZZ,QAAQ,CAAC,gDAAgD,CAAC;MAC5D;IACF,CAAC;IACDQ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,eAAe,GAAGR,WAAW,GAAGE,YAAY;EAClD,MAAMO,gBAAgB,GAAGD,eAAe,GAAGN,YAAY;EACvD,MAAMQ,YAAY,GAAGlB,KAAK,CAACmB,KAAK,CAACF,gBAAgB,EAAED,eAAe,CAAC;EAEnE,MAAMI,QAAQ,GAAIC,UAAU,IAAKZ,cAAc,CAACY,UAAU,CAAC;EAE3D,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACxB,KAAK,CAACyB,MAAM,GAAGf,YAAY,CAAC;EAEzD,MAAMgB,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACF,MAAMjC,KAAK,CAACkC,MAAM,CAAC,8CAA8CD,EAAE,EAAE,CAAC;MACtE1B,QAAQ,CAACD,KAAK,CAAC6B,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC,MAAM;MACNxB,QAAQ,CAAC,8CAA8C,CAAC;IAC1D;EACF,CAAC;EAED,MAAM4B,UAAU,GAAID,IAAI,IAAK;IAC3BvB,cAAc,CAACuB,IAAI,CAAC;IACpBzB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM2B,SAAS,GAAGA,CAAA,KAAM;IACtBzB,cAAc,CAAC,IAAI,CAAC;IACpBF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAM4B,UAAU,GAAIC,OAAO,IAAK;IAC9B,IAAI5B,WAAW,EAAE;MACfL,QAAQ,CAACD,KAAK,CAACmC,GAAG,CAAEL,IAAI,IAAMA,IAAI,CAACH,EAAE,KAAKO,OAAO,CAACP,EAAE,GAAGO,OAAO,GAAGJ,IAAK,CAAC,CAAC;IAC1E,CAAC,MAAM;MACL7B,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;QAAE,GAAGkC,OAAO;QAAEP,EAAE,EAAES,IAAI,CAACC,GAAG,CAAC;MAAE,CAAC,CAAC,CAAC;IACtD;IACAhC,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,oBACER,OAAA;IAAKyC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9B3C,OAAA;MAAA2C,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGlB/C,OAAA;MAAKgD,SAAS,EAAC,qBAAqB;MAAAL,QAAA,gBAClC3C,OAAA;QAAOgD,SAAS,EAAC,YAAY;QAACP,KAAK,EAAE;UAAEQ,KAAK,EAAE,MAAM;UAAEC,cAAc,EAAE;QAAW,CAAE;QAAAP,QAAA,gBACjF3C,OAAA;UAAA2C,QAAA,eACE3C,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAA2C,QAAA,EAAI;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACX/C,OAAA;cAAA2C,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB/C,OAAA;cAAA2C,QAAA,EAAI;YAAS;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClB/C,OAAA;cAAA2C,QAAA,EAAI;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACd/C,OAAA;cAAA2C,QAAA,EAAI;YAAU;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnB/C,OAAA;cAAA2C,QAAA,EAAI;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACR/C,OAAA;UAAA2C,QAAA,EACGtB,YAAY,CAACiB,GAAG,CAAEL,IAAI,iBACrBjC,OAAA;YAAA2C,QAAA,gBACE3C,OAAA;cAAA2C,QAAA,EAAKV,IAAI,CAACH;YAAE;cAAAc,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClB/C,OAAA;cAAA2C,QAAA,EAAKV,IAAI,CAACkB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClC/C,OAAA;cAAA2C,QAAA,EAAKV,IAAI,CAACkB,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;YAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAClC/C,OAAA;cAAA2C,QAAA,EAAKV,IAAI,CAACoB;YAAK;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACrB/C,OAAA;cAAA2C,QAAA,EAAKV,IAAI,CAACqB,UAAU,IAAI;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACnC/C,OAAA;cAAA2C,QAAA,gBACE3C,OAAA;gBAAQuD,OAAO,EAAEA,CAAA,KAAMrB,UAAU,CAACD,IAAI,CAAE;gBAACe,SAAS,EAAC,UAAU;gBAAAL,QAAA,EAAC;cAE9D;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,eACT/C,OAAA;gBAAQuD,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACI,IAAI,CAACH,EAAE,CAAE;gBAACkB,SAAS,EAAC,YAAY;gBAAAL,QAAA,EAAC;cAErE;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACP,CAAC;UAAA,GAbEd,IAAI,CAACH,EAAE;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAcZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAGR/C,OAAA;QAAKyC,KAAK,EAAE;UAAEe,SAAS,EAAE;QAAS,CAAE;QAAAb,QAAA,EACjCc,KAAK,CAACC,IAAI,CAAC;UAAE9B,MAAM,EAAEH;QAAW,CAAC,EAAE,CAACkC,CAAC,EAAEC,KAAK,kBAC3C5D,OAAA;UAEEuD,OAAO,EAAEA,CAAA,KAAMhC,QAAQ,CAACqC,KAAK,GAAG,CAAC,CAAE;UACnCnB,KAAK,EAAE;YACLC,OAAO,EAAE,UAAU;YACnBmB,MAAM,EAAE,OAAO;YACfC,MAAM,EAAE,SAAS;YACjBC,eAAe,EAAE,SAAS;YAC1BC,KAAK,EAAE,OAAO;YACdC,YAAY,EAAE;UAChB,CAAE;UAAAtB,QAAA,EAEDiB,KAAK,GAAG;QAAC,GAXLA,KAAK;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN/C,OAAA;MAAKyC,KAAK,EAAE;QAAEyB,YAAY,EAAE;MAAO,CAAE;MAAAvB,QAAA,eACnC3C,OAAA;QACEuD,OAAO,EAAEpB,SAAU;QACnBM,KAAK,EAAE;UACLC,OAAO,EAAE,WAAW;UACpBqB,eAAe,EAAE,SAAS;UAC1BC,KAAK,EAAE,OAAO;UACdC,YAAY,EAAE,KAAK;UACnBE,OAAO,EAAE,OAAO;UAChBC,UAAU,EAAE,MAAM;UAClBC,WAAW,EAAE;QACf,CAAE;QAAA1B,QAAA,EACH;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGLxC,QAAQ,iBACPP,OAAA;MAAKgD,SAAS,EAAC,qBAAqB;MAACP,KAAK,EAAE;QAAE6B,SAAS,EAAE,MAAM;QAAEC,MAAM,EAAE,gBAAgB;QAAE7B,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC3G3C,OAAA,CAACF,QAAQ;QAACmC,IAAI,EAAExB,WAAY;QAAC+D,MAAM,EAAEpC,UAAW;QAACqC,QAAQ,EAAEA,CAAA,KAAMjE,WAAW,CAAC,KAAK;MAAE;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpF,CACN,EAEA1C,KAAK,iBAAIL,OAAA;MAAGyC,KAAK,EAAE;QAAEuB,KAAK,EAAE,KAAK;QAAER,SAAS,EAAE;MAAS,CAAE;MAAAb,QAAA,EAAEtC;IAAK;MAAAuC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnE,CAAC;AAEV,CAAC;AAAC7C,EAAA,CAhJID,QAAQ;AAAAyE,EAAA,GAARzE,QAAQ;AAkJd,eAAeA,QAAQ;AAAC,IAAAyE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}