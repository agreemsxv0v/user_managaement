{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\user-management\\\\src\\\\components\\\\UserList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n// import \"./UserList.css\";\n\n// const UserList = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState(\"\");\n//     const [showForm, setShowForm] = useState(false);\n//     const [editingUser, setEditingUser] = useState(null);\n\n//     const [currentPage, setCurrentPage] = useState(1);\n//     const [usersPerPage] = useState(6); // Show 5 users per page\n\n//     // Fetch users from the API\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//                 setUsers(response.data);\n//             } catch (err) {\n//                 setError(\"Failed to fetch users. Please try again later.\");\n//             }\n//         };\n//         fetchUsers();\n//     }, []);\n\n//     // Pagination Logic\n\n//     const indexOfLastUser = currentPage * usersPerPage;\n//     const indexOfFirstUser = indexOfLastUser - usersPerPage;\n//     const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n//     const paginate = (pageNumber) => setCurrentPage(pageNumber);\n//     const totalPages = Math.ceil(users.length / usersPerPage);\n\n//     // Handle to delete a user\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//             setUsers(users.filter((user) => user.id !== id));\n//         } catch {\n//             setError(\"Failed to delete the user. Please try again.\");\n//         }\n//     };\n\n//     // Handle to  edit a user\n//     const handleEdit = (user) => {\n//         setEditingUser(user);\n//         setShowForm(true);\n//     };\n\n//     // Handle to add a new user\n\n//     const handleAdd = () => {\n//         setEditingUser(null);\n//         setShowForm(true);\n//     };\n\n//     // Handle saving a new or edited user\n\n//     const handleSave = (newUser) => {\n//         if (editingUser) {\n//             // PUT request to update the user on the server\n\n//             axios.put(`https://jsonplaceholder.typicode.com/users/${newUser.id}`, newUser)\n//                 .then(response => {\n//                     setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//                     setShowForm(false);\n//                 })\n//                 .catch(error => {\n//                     setError(\"Failed to save changes. Please try again.\");\n//                 });\n//         } else {\n//             // POST request to add a new user\n\n//             axios.post(\"https://jsonplaceholder.typicode.com/users\", newUser)\n//                 .then(response => {\n//                     // Simulate adding a new user by generating an ID\n//                     setUsers([...users, { ...newUser, id: Date.now() }]);\n//                     setShowForm(false);\n//                 })\n//                 .catch(error => {\n//                     setError(\"Failed to add the user. Please try again.\");\n//                 });\n//         }\n//     };\n\n//     return (\n//         <div className=\"user-list-container\">\n//             <h2>User List</h2>\n\n//             {/* user list table */}\n\n//             <div className=\"table-container\">\n//                 <table className=\"user-table\">\n//                     <thead>\n//                         <tr>\n//                             <th>ID</th>\n//                             <th>First Name</th>\n//                             <th>Last Name</th>\n//                             <th>Email</th>\n//                             <th>Department</th>\n//                             <th>Actions</th>\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {currentUsers.map((user) => (\n//                             <tr key={user.id}>\n//                                 <td>{user.id}</td>\n//                                 <td>{user.name.split(\" \")[0]}</td>\n//                                 <td>{user.name.split(\" \")[1]}</td>\n//                                 <td>{user.email}</td>\n//                                 <td>{user.department || \"N/A\"}</td>\n//                                 <td>\n//                                     <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\n//                                     <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\n//                                 </td>\n//                             </tr>\n//                         ))}\n//                     </tbody>\n//                 </table>\n\n//                 {/* Pagination Button */}\n\n//                 <div className=\"pagination-container\">\n//                     {Array.from({ length: totalPages }, (_, index) => (\n//                         <button\n//                             key={index}\n//                             onClick={() => paginate(index + 1)}\n//                             className=\"pagination-btn\"\n//                         >\n//                             {index + 1}\n//                         </button>\n//                     ))}\n//                 </div>\n//             </div>\n\n//             {/* Add user button */}\n//             <div className=\"add-user-container\">\n//                 <button\n//                     onClick={handleAdd}\n//                     className=\"add-user-btn\"\n//                 >\n//                     Add User\n//                 </button>\n//             </div>\n\n//             {/* Render user from outside the list */}\n\n//             {showForm && (\n//                 <div className=\"user-form-container\">\n//                     <UserForm user={editingUser} onSave={handleSave} onCancel={() => setShowForm(false)} />\n//                 </div>\n//             )}\n\n//             {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default UserList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserForm from \"./UserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [loading, setLoading] = useState(false); // Added loading state\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        setLoading(true);\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n        setUsers(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch users. Please try again later.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleDelete = async id => {\n    try {\n      setLoading(true);\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      setUsers(users.filter(user => user.id !== id));\n    } catch {\n      setError(\"Failed to delete the user. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEdit = user => {\n    setEditingUser(user);\n    setShowForm(true);\n  };\n  const handleAdd = () => {\n    setEditingUser(null);\n    setShowForm(true);\n  };\n  const handleSave = async newUser => {\n    try {\n      setLoading(true);\n      if (editingUser) {\n        // Update an existing user\n        await axios.put(`https://jsonplaceholder.typicode.com/users/${editingUser.id}`, newUser);\n        setUsers(users.map(user => user.id === newUser.id ? newUser : user));\n      } else {\n        // Add a new user\n        const response = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newUser);\n        setUsers([...users, {\n          ...response.data,\n          id: Date.now()\n        }]); // Simulate new user ID\n      }\n      setShowForm(false);\n    } catch {\n      setError(\"Failed to save the user. Please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 19\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name.split(\" \")[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name.split(\" \")[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.department || \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(user),\n                className: \"edit-btn\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(user.id),\n                className: \"delete-btn\",\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      className: \"add-btn\",\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(UserForm, {\n      user: editingUser,\n      onSave: handleSave,\n      onCancel: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"FTud+KbU4ZD1PFcqmUrp3CPO7Mk=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserForm","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","error","setError","showForm","setShowForm","editingUser","setEditingUser","loading","setLoading","fetchUsers","response","get","data","err","handleDelete","id","delete","filter","user","handleEdit","handleAdd","handleSave","newUser","put","map","post","Date","now","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","split","email","department","onClick","onSave","onCancel","_c","$RefreshReg$"],"sources":["D:/assignment/user-management/src/components/UserList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n// import \"./UserList.css\";\r\n\r\n// const UserList = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [error, setError] = useState(\"\");\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [editingUser, setEditingUser] = useState(null);\r\n\r\n//     const [currentPage, setCurrentPage] = useState(1);\r\n//     const [usersPerPage] = useState(6); // Show 5 users per page\r\n\r\n//     // Fetch users from the API\r\n\r\n//     useEffect(() => {\r\n//         const fetchUsers = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//                 setUsers(response.data);\r\n//             } catch (err) {\r\n//                 setError(\"Failed to fetch users. Please try again later.\");\r\n//             }\r\n//         };\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     // Pagination Logic\r\n\r\n//     const indexOfLastUser = currentPage * usersPerPage;\r\n//     const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n//     const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n//     const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n//     const totalPages = Math.ceil(users.length / usersPerPage);\r\n\r\n//     // Handle to delete a user\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//             setUsers(users.filter((user) => user.id !== id));\r\n//         } catch {\r\n//             setError(\"Failed to delete the user. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     // Handle to  edit a user\r\n//     const handleEdit = (user) => {\r\n//         setEditingUser(user);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     // Handle to add a new user\r\n\r\n//     const handleAdd = () => {\r\n//         setEditingUser(null);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     // Handle saving a new or edited user\r\n\r\n//     const handleSave = (newUser) => {\r\n//         if (editingUser) {\r\n//             // PUT request to update the user on the server\r\n\r\n//             axios.put(`https://jsonplaceholder.typicode.com/users/${newUser.id}`, newUser)\r\n//                 .then(response => {\r\n//                     setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//                     setShowForm(false);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     setError(\"Failed to save changes. Please try again.\");\r\n//                 });\r\n//         } else {\r\n//             // POST request to add a new user\r\n\r\n//             axios.post(\"https://jsonplaceholder.typicode.com/users\", newUser)\r\n//                 .then(response => {\r\n//                     // Simulate adding a new user by generating an ID\r\n//                     setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//                     setShowForm(false);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     setError(\"Failed to add the user. Please try again.\");\r\n//                 });\r\n//         }\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"user-list-container\">\r\n//             <h2>User List</h2>\r\n\r\n//             {/* user list table */}\r\n\r\n//             <div className=\"table-container\">\r\n//                 <table className=\"user-table\">\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th>ID</th>\r\n//                             <th>First Name</th>\r\n//                             <th>Last Name</th>\r\n//                             <th>Email</th>\r\n//                             <th>Department</th>\r\n//                             <th>Actions</th>\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {currentUsers.map((user) => (\r\n//                             <tr key={user.id}>\r\n//                                 <td>{user.id}</td>\r\n//                                 <td>{user.name.split(\" \")[0]}</td>\r\n//                                 <td>{user.name.split(\" \")[1]}</td>\r\n//                                 <td>{user.email}</td>\r\n//                                 <td>{user.department || \"N/A\"}</td>\r\n//                                 <td>\r\n//                                     <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\r\n//                                     <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\r\n//                                 </td>\r\n//                             </tr>\r\n//                         ))}\r\n//                     </tbody>\r\n//                 </table>\r\n\r\n//                 {/* Pagination Button */}\r\n\r\n//                 <div className=\"pagination-container\">\r\n//                     {Array.from({ length: totalPages }, (_, index) => (\r\n//                         <button\r\n//                             key={index}\r\n//                             onClick={() => paginate(index + 1)}\r\n//                             className=\"pagination-btn\"\r\n//                         >\r\n//                             {index + 1}\r\n//                         </button>\r\n//                     ))}\r\n//                 </div>\r\n//             </div>\r\n\r\n//             {/* Add user button */}\r\n//             <div className=\"add-user-container\">\r\n//                 <button\r\n//                     onClick={handleAdd}\r\n//                     className=\"add-user-btn\"\r\n//                 >\r\n//                     Add User\r\n//                 </button>\r\n//             </div>\r\n\r\n//             {/* Render user from outside the list */}\r\n\r\n//             {showForm && (\r\n//                 <div className=\"user-form-container\">\r\n//                     <UserForm user={editingUser} onSave={handleSave} onCancel={() => setShowForm(false)} />\r\n//                 </div>\r\n//             )}\r\n\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n  const [loading, setLoading] = useState(false); // Added loading state\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        setUsers(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch users. Please try again later.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      setLoading(true);\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      setUsers(users.filter((user) => user.id !== id));\r\n    } catch {\r\n      setError(\"Failed to delete the user. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingUser(user);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setEditingUser(null);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleSave = async (newUser) => {\r\n    try {\r\n      setLoading(true);\r\n      if (editingUser) {\r\n        // Update an existing user\r\n        await axios.put(`https://jsonplaceholder.typicode.com/users/${editingUser.id}`, newUser);\r\n        setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n      } else {\r\n        // Add a new user\r\n        const response = await axios.post(\"https://jsonplaceholder.typicode.com/users\", newUser);\r\n        setUsers([...users, { ...response.data, id: Date.now() }]); // Simulate new user ID\r\n      }\r\n      setShowForm(false);\r\n    } catch {\r\n      setError(\"Failed to save the user. Please try again.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>User List</h2>\r\n      {loading && <p>Loading...</p>} {/* Show loading indicator */}\r\n      {error && <p className=\"error-message\">{error}</p>} {/* Show error message */}\r\n\r\n      <div className=\"user-list-container\">\r\n        <table className=\"user-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Department</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.id}>\r\n                <td>{user.id}</td>\r\n                <td>{user.name.split(\" \")[0]}</td>\r\n                <td>{user.name.split(\" \")[1]}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.department || \"N/A\"}</td>\r\n                <td>\r\n                  <button onClick={() => handleEdit(user)} className=\"edit-btn\">\r\n                    Edit\r\n                  </button>\r\n                  <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <button onClick={handleAdd} className=\"add-btn\">Add User</button>\r\n\r\n      {showForm && (\r\n        <UserForm user={editingUser} onSave={handleSave} onCancel={() => setShowForm(false)} />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}