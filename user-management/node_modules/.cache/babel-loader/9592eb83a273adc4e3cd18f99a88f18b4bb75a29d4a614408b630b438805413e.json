{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Department</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name.split(\" \")[0]}</td>\n//               <td>{user.name.split(\" \")[1]}</td>\n//               <td>{user.email}</td>\n//               <td>{user.department || \"N/A\"}</td>\n//               <td>\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n\n//     <button className=\"btn-add\" onClick={handleAdd}>\n//         Add User\n//       </button>\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   // Styles\n//   const tableStyle = {\n//     width: \"100%\",\n//     borderCollapse: \"collapse\",\n//     marginBottom: \"20px\",\n//     overflowX: \"auto\",\n//   };\n\n//   const thStyle = {\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     padding: \"10px\",\n//     textAlign: \"left\",\n//   };\n\n//   const tdStyle = {\n//     border: \"1px solid #ddd\",\n//     padding: \"8px\",\n//     textAlign: \"left\",\n//   };\n\n//   const buttonStyle = {\n//     padding: \"8px 12px\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"14px\",\n//     marginRight: \"5px\",\n//   };\n\n//   const editButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//   };\n\n//   const deleteButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#f44336\",\n//     color: \"white\",\n//   };\n\n//   const addButtonStyle = {\n//     padding: \"10px 20px\",\n//     backgroundColor: \"#008CBA\",\n//     color: \"white\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"16px\",\n//     marginBottom: \"20px\",\n//     display: \"block\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   };\n\n//   const errorStyle = {\n//     color: \"red\",\n//     fontSize: \"16px\",\n//     textAlign: \"center\",\n//     marginTop: \"20px\",\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <table style={tableStyle}>\n//         <thead>\n//           <tr>\n//             <th style={thStyle}>ID</th>\n//             <th style={thStyle}>First Name</th>\n//             <th style={thStyle}>Last Name</th>\n//             <th style={thStyle}>Email</th>\n//             <th style={thStyle}>Department</th>\n//             <th style={thStyle}>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td style={tdStyle}>{user.id}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\n//               <td style={tdStyle}>{user.email}</td>\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\n//               <td style={tdStyle}>\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\n//                   Edit\n//                 </button>\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\n//         Add User\n//       </button>\n//       {error && <p style={errorStyle}>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n// import './UserList.css';  // Import the external CSS file\n\n// const UserList = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState(\"\");\n//     const [showForm, setShowForm] = useState(false);\n//     const [editingUser, setEditingUser] = useState(null);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//                 setUsers(response.data);\n//             } catch (err) {\n//                 setError(\"Failed to fetch users. Please try again later.\");\n//             }\n//         };\n//         fetchUsers();\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//             setUsers(users.filter((user) => user.id !== id));\n//         } catch {\n//             setError(\"Failed to delete the user. Please try again.\");\n//         }\n//     };\n\n//     const handleEdit = (user) => {\n//         setEditingUser(user);\n//         setShowForm(true);\n//     };\n\n//     const handleAdd = () => {\n//         setEditingUser(null);\n//         setShowForm(true);\n//     };\n\n//     const handleSave = (newUser) => {\n//         if (editingUser) {\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//         } else {\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\n//         }\n//         setShowForm(false);\n//     };\n\n//     return (\n//         <div className=\"user-list-container\">\n//             <h2>User List</h2>\n\n//             <table className=\"user-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>First Name</th>\n//                         <th>Last Name</th>\n//                         <th>Email</th>\n//                         <th>Department</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.id}>\n//                             <td>{user.id}</td>\n//                             <td>{user.name.split(\" \")[0]}</td>\n//                             <td>{user.name.split(\" \")[1]}</td>\n//                             <td>{user.email}</td>\n//                             <td>{user.department || \"N/A\"}</td>\n//                             <td>\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             {showForm && (\n//                 <UserForm\n//                     user={editingUser}\n//                     onSave={handleSave}\n//                     onCancel={() => setShowForm(false)}\n//                 />\n//             )}\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\n//             {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default UserList;","map":{"version":3,"names":[],"sources":["D:/assignment/user-management/src/components/UserList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Department</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.id}</td>\r\n//               <td>{user.name.split(\" \")[0]}</td>\r\n//               <td>{user.name.split(\" \")[1]}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.department || \"N/A\"}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//     <button className=\"btn-add\" onClick={handleAdd}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   // Styles\r\n//   const tableStyle = {\r\n//     width: \"100%\",\r\n//     borderCollapse: \"collapse\",\r\n//     marginBottom: \"20px\",\r\n//     overflowX: \"auto\",\r\n//   };\r\n\r\n//   const thStyle = {\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     padding: \"10px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const tdStyle = {\r\n//     border: \"1px solid #ddd\",\r\n//     padding: \"8px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: \"8px 12px\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"14px\",\r\n//     marginRight: \"5px\",\r\n//   };\r\n\r\n//   const editButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const deleteButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#f44336\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const addButtonStyle = {\r\n//     padding: \"10px 20px\",\r\n//     backgroundColor: \"#008CBA\",\r\n//     color: \"white\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"16px\",\r\n//     marginBottom: \"20px\",\r\n//     display: \"block\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   };\r\n\r\n//   const errorStyle = {\r\n//     color: \"red\",\r\n//     fontSize: \"16px\",\r\n//     textAlign: \"center\",\r\n//     marginTop: \"20px\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <table style={tableStyle}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th style={thStyle}>ID</th>\r\n//             <th style={thStyle}>First Name</th>\r\n//             <th style={thStyle}>Last Name</th>\r\n//             <th style={thStyle}>Email</th>\r\n//             <th style={thStyle}>Department</th>\r\n//             <th style={thStyle}>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td style={tdStyle}>{user.id}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\r\n//               <td style={tdStyle}>{user.email}</td>\r\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\r\n//               <td style={tdStyle}>\r\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\r\n//                   Edit\r\n//                 </button>\r\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p style={errorStyle}>{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n// import './UserList.css';  // Import the external CSS file\r\n\r\n// const UserList = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [error, setError] = useState(\"\");\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [editingUser, setEditingUser] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchUsers = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//                 setUsers(response.data);\r\n//             } catch (err) {\r\n//                 setError(\"Failed to fetch users. Please try again later.\");\r\n//             }\r\n//         };\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//             setUsers(users.filter((user) => user.id !== id));\r\n//         } catch {\r\n//             setError(\"Failed to delete the user. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (user) => {\r\n//         setEditingUser(user);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleAdd = () => {\r\n//         setEditingUser(null);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleSave = (newUser) => {\r\n//         if (editingUser) {\r\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//         } else {\r\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//         }\r\n//         setShowForm(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"user-list-container\">\r\n//             <h2>User List</h2>\r\n\r\n//             <table className=\"user-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>ID</th>\r\n//                         <th>First Name</th>\r\n//                         <th>Last Name</th>\r\n//                         <th>Email</th>\r\n//                         <th>Department</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.id}>\r\n//                             <td>{user.id}</td>\r\n//                             <td>{user.name.split(\" \")[0]}</td>\r\n//                             <td>{user.name.split(\" \")[1]}</td>\r\n//                             <td>{user.email}</td>\r\n//                             <td>{user.department || \"N/A\"}</td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\r\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             {showForm && (\r\n//                 <UserForm\r\n//                     user={editingUser}\r\n//                     onSave={handleSave}\r\n//                     onCancel={() => setShowForm(false)}\r\n//                 />\r\n//             )}\r\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}