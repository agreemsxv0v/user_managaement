{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\user-management\\\\src\\\\components\\\\UserList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   return (\n//     <div>\n//       <button className=\"btn-add\" onClick={handleAdd}>\n//         Add User\n//       </button>\n//       {error && <p className=\"error\">{error}</p>}\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Department</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name.split(\" \")[0]}</td>\n//               <td>{user.name.split(\" \")[1]}</td>\n//               <td>{user.email}</td>\n//               <td>{user.department || \"N/A\"}</td>\n//               <td>\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// UserList.jsx\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  useEffect(() => {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      // Adding dummy departments for demonstration\n      const updatedUsers = response.data.map((user, index) => ({\n        ...user,\n        department: user.department || `Department ${index + 1}` // Dummy data for departments\n      }));\n      setUsers(updatedUsers);\n    });\n  }, []);\n  const deleteUser = id => {\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`).then(() => {\n      // Remove the deleted user from the state\n      setUsers(users.filter(user => user.id !== id));\n    });\n  };\n  const handleAddUser = newUser => {\n    // Add the new user to the state (since JSONPlaceholder won't persist)\n    setUsers([...users, newUser]);\n  };\n  const handleEditUser = updatedUser => {\n    // Update the user in the state\n    const updatedUsers = users.map(user => user.id === updatedUser.id ? updatedUser : user);\n    setUsers(updatedUsers);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/add\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-btn\",\n        children: \"Add New User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name.split(\" \")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name.split(\" \")[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.department\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/edit/${user.id}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit-btn\",\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => deleteUser(user.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","Link","axios","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","get","then","response","updatedUsers","data","map","user","index","department","deleteUser","id","delete","filter","handleAddUser","newUser","handleEditUser","updatedUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","to","name","split","email","onClick","_c","$RefreshReg$"],"sources":["D:/assignment/user-management/src/components/UserList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button className=\"btn-add\" onClick={handleAdd}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Department</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.id}</td>\r\n//               <td>{user.name.split(\" \")[0]}</td>\r\n//               <td>{user.name.split(\" \")[1]}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.department || \"N/A\"}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\n\r\n// UserList.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then((response) => {\r\n      // Adding dummy departments for demonstration\r\n      const updatedUsers = response.data.map((user, index) => ({\r\n        ...user,\r\n        department: user.department || `Department ${index + 1}`, // Dummy data for departments\r\n      }));\r\n      setUsers(updatedUsers);\r\n    });\r\n  }, []);\r\n\r\n  const deleteUser = (id) => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`).then(() => {\r\n      // Remove the deleted user from the state\r\n      setUsers(users.filter((user) => user.id !== id));\r\n    });\r\n  };\r\n\r\n  const handleAddUser = (newUser) => {\r\n    // Add the new user to the state (since JSONPlaceholder won't persist)\r\n    setUsers([...users, newUser]);\r\n  };\r\n\r\n  const handleEditUser = (updatedUser) => {\r\n    // Update the user in the state\r\n    const updatedUsers = users.map((user) =>\r\n      user.id === updatedUser.id ? updatedUser : user\r\n    );\r\n    setUsers(updatedUsers);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>User Management</h1>\r\n      <Link to=\"/add\">\r\n        <button className=\"add-btn\">Add New User</button>\r\n      </Link>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>First Name</th>\r\n            <th>Last Name</th>\r\n            <th>Email</th>\r\n            <th>Department</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {users.map((user) => (\r\n            <tr key={user.id}>\r\n              <td>{user.id}</td>\r\n              <td>{user.name.split(\" \")[0]}</td>\r\n              <td>{user.name.split(\" \")[1]}</td>\r\n              <td>{user.email}</td>\r\n              <td>{user.department}</td>\r\n              <td>\r\n                <Link to={`/edit/${user.id}`}>\r\n                  <button className=\"edit-btn\">Edit</button>\r\n                </Link>\r\n                <button\r\n                  className=\"delete-btn\"\r\n                  onClick={() => deleteUser(user.id)}\r\n                >\r\n                  Delete\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}