{"ast":null,"code":"var _jsxFileName = \"D:\\\\assignment\\\\user-management\\\\src\\\\components\\\\UserList.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   return (\n//     <div>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>ID</th>\n//             <th>First Name</th>\n//             <th>Last Name</th>\n//             <th>Email</th>\n//             <th>Department</th>\n//             <th>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td>{user.id}</td>\n//               <td>{user.name.split(\" \")[0]}</td>\n//               <td>{user.name.split(\" \")[1]}</td>\n//               <td>{user.email}</td>\n//               <td>{user.department || \"N/A\"}</td>\n//               <td>\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n\n//     <button className=\"btn-add\" onClick={handleAdd}>\n//         Add User\n//       </button>\n//       {error && <p className=\"error\">{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n\n// const UserList = () => {\n//   const [users, setUsers] = useState([]);\n//   const [error, setError] = useState(\"\");\n//   const [showForm, setShowForm] = useState(false);\n//   const [editingUser, setEditingUser] = useState(null);\n\n//   useEffect(() => {\n//     const fetchUsers = async () => {\n//       try {\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//         setUsers(response.data);\n//       } catch (err) {\n//         setError(\"Failed to fetch users. Please try again later.\");\n//       }\n//     };\n//     fetchUsers();\n//   }, []);\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//       setUsers(users.filter((user) => user.id !== id));\n//     } catch {\n//       setError(\"Failed to delete the user. Please try again.\");\n//     }\n//   };\n\n//   const handleEdit = (user) => {\n//     setEditingUser(user);\n//     setShowForm(true);\n//   };\n\n//   const handleAdd = () => {\n//     setEditingUser(null);\n//     setShowForm(true);\n//   };\n\n//   const handleSave = (newUser) => {\n//     if (editingUser) {\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//     } else {\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\n//     }\n//     setShowForm(false);\n//   };\n\n//   // Styles\n//   const tableStyle = {\n//     width: \"100%\",\n//     borderCollapse: \"collapse\",\n//     marginBottom: \"20px\",\n//     overflowX: \"auto\",\n//   };\n\n//   const thStyle = {\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//     padding: \"10px\",\n//     textAlign: \"left\",\n//   };\n\n//   const tdStyle = {\n//     border: \"1px solid #ddd\",\n//     padding: \"8px\",\n//     textAlign: \"left\",\n//   };\n\n//   const buttonStyle = {\n//     padding: \"8px 12px\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"14px\",\n//     marginRight: \"5px\",\n//   };\n\n//   const editButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#4CAF50\",\n//     color: \"white\",\n//   };\n\n//   const deleteButtonStyle = {\n//     ...buttonStyle,\n//     backgroundColor: \"#f44336\",\n//     color: \"white\",\n//   };\n\n//   const addButtonStyle = {\n//     padding: \"10px 20px\",\n//     backgroundColor: \"#008CBA\",\n//     color: \"white\",\n//     borderRadius: \"4px\",\n//     border: \"none\",\n//     cursor: \"pointer\",\n//     fontSize: \"16px\",\n//     marginBottom: \"20px\",\n//     display: \"block\",\n//     marginLeft: \"auto\",\n//     marginRight: \"auto\",\n//   };\n\n//   const errorStyle = {\n//     color: \"red\",\n//     fontSize: \"16px\",\n//     textAlign: \"center\",\n//     marginTop: \"20px\",\n//   };\n\n//   return (\n//     <div style={{ padding: \"20px\" }}>\n//       <table style={tableStyle}>\n//         <thead>\n//           <tr>\n//             <th style={thStyle}>ID</th>\n//             <th style={thStyle}>First Name</th>\n//             <th style={thStyle}>Last Name</th>\n//             <th style={thStyle}>Email</th>\n//             <th style={thStyle}>Department</th>\n//             <th style={thStyle}>Actions</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {users.map((user) => (\n//             <tr key={user.id}>\n//               <td style={tdStyle}>{user.id}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\n//               <td style={tdStyle}>{user.email}</td>\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\n//               <td style={tdStyle}>\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\n//                   Edit\n//                 </button>\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\n//                   Delete\n//                 </button>\n//               </td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//       {showForm && (\n//         <UserForm\n//           user={editingUser}\n//           onSave={handleSave}\n//           onCancel={() => setShowForm(false)}\n//         />\n//       )}\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\n//         Add User\n//       </button>\n//       {error && <p style={errorStyle}>{error}</p>}\n//     </div>\n//   );\n// };\n\n// export default UserList;\n\n// import React, { useState, useEffect } from \"react\";\n// import axios from \"axios\";\n// import UserForm from \"./UserForm\";\n// import './UserList.css';  // Import the external CSS file\n\n// const UserList = () => {\n//     const [users, setUsers] = useState([]);\n//     const [error, setError] = useState(\"\");\n//     const [showForm, setShowForm] = useState(false);\n//     const [editingUser, setEditingUser] = useState(null);\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             try {\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n//                 setUsers(response.data);\n//             } catch (err) {\n//                 setError(\"Failed to fetch users. Please try again later.\");\n//             }\n//         };\n//         fetchUsers();\n//     }, []);\n\n//     const handleDelete = async (id) => {\n//         try {\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n//             setUsers(users.filter((user) => user.id !== id));\n//         } catch {\n//             setError(\"Failed to delete the user. Please try again.\");\n//         }\n//     };\n\n//     const handleEdit = (user) => {\n//         setEditingUser(user);\n//         setShowForm(true);\n//     };\n\n//     const handleAdd = () => {\n//         setEditingUser(null);\n//         setShowForm(true);\n//     };\n\n//     const handleSave = (newUser) => {\n//         if (editingUser) {\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\n//         } else {\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\n//         }\n//         setShowForm(false);\n//     };\n\n//     return (\n//         <div className=\"user-list-container\">\n//             <h2>User List</h2>\n\n//             <table className=\"user-table\">\n//                 <thead>\n//                     <tr>\n//                         <th>ID</th>\n//                         <th>First Name</th>\n//                         <th>Last Name</th>\n//                         <th>Email</th>\n//                         <th>Department</th>\n//                         <th>Actions</th>\n//                     </tr>\n//                 </thead>\n//                 <tbody>\n//                     {users.map((user) => (\n//                         <tr key={user.id}>\n//                             <td>{user.id}</td>\n//                             <td>{user.name.split(\" \")[0]}</td>\n//                             <td>{user.name.split(\" \")[1]}</td>\n//                             <td>{user.email}</td>\n//                             <td>{user.department || \"N/A\"}</td>\n//                             <td>\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\n//                             </td>\n//                         </tr>\n//                     ))}\n//                 </tbody>\n//             </table>\n//             {showForm && (\n//                 <UserForm\n//                     user={editingUser}\n//                     onSave={handleSave}\n//                     onCancel={() => setShowForm(false)}\n//                 />\n//             )}\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\n//             {error && <p className=\"error-message\">{error}</p>}\n//         </div>\n//     );\n// };\n\n// export default UserList;\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport UserForm from \"./UserForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserList = () => {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [showForm, setShowForm] = useState(false);\n  const [editingUser, setEditingUser] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [usersPerPage] = useState(5); // Show 5 users per page\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n        setUsers(response.data);\n      } catch (err) {\n        setError(\"Failed to fetch users. Please try again later.\");\n      }\n    };\n    fetchUsers();\n  }, []);\n\n  // Get the current users to display based on the page\n  const indexOfLastUser = currentPage * usersPerPage;\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\n\n  // Handle page change\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n\n  // Total number of pages\n  const totalPages = Math.ceil(users.length / usersPerPage);\n  const handleDelete = async id => {\n    try {\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n      setUsers(users.filter(user => user.id !== id));\n    } catch {\n      setError(\"Failed to delete the user. Please try again.\");\n    }\n  };\n  const handleEdit = user => {\n    setEditingUser(user);\n    setShowForm(true);\n  };\n  const handleAdd = () => {\n    setEditingUser(null);\n    setShowForm(true);\n  };\n  const handleSave = newUser => {\n    if (editingUser) {\n      setUsers(users.map(user => user.id === newUser.id ? newUser : user));\n    } else {\n      setUsers([...users, {\n        ...newUser,\n        id: Date.now()\n      }]);\n    }\n    setShowForm(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        width: \"100%\",\n        borderCollapse: \"collapse\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"Department\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 436,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"10px\",\n              textAlign: \"left\",\n              backgroundColor: \"#4CAF50\",\n              color: \"white\"\n            },\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: currentUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: user.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: user.name.split(\" \")[0]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: user.name.split(\" \")[1]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: user.department || \"N/A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              border: \"1px solid #ddd\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(user),\n              style: {\n                backgroundColor: \"#4CAF50\",\n                color: \"white\",\n                padding: \"8px 12px\",\n                cursor: \"pointer\"\n              },\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(user.id),\n              style: {\n                backgroundColor: \"#f44336\",\n                color: \"white\",\n                padding: \"8px 12px\",\n                cursor: \"pointer\"\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => paginate(index + 1),\n        style: {\n          padding: \"8px 12px\",\n          margin: \"0 5px\",\n          cursor: \"pointer\",\n          backgroundColor: \"#008CBA\",\n          color: \"white\",\n          borderRadius: \"4px\"\n        },\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(UserForm, {\n      user: editingUser,\n      onSave: handleSave,\n      onCancel: () => setShowForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAdd,\n      style: {\n        padding: \"10px 20px\",\n        backgroundColor: \"#008CBA\",\n        color: \"white\",\n        borderRadius: \"4px\",\n        margin: \"20px 0\",\n        display: \"block\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      },\n      children: \"Add User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        textAlign: \"center\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 427,\n    columnNumber: 5\n  }, this);\n};\n_s(UserList, \"671gOClJ/mvkVxNGuxXWvffH/xo=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","UserForm","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","error","setError","showForm","setShowForm","editingUser","setEditingUser","currentPage","setCurrentPage","usersPerPage","fetchUsers","response","get","data","err","indexOfLastUser","indexOfFirstUser","currentUsers","slice","paginate","pageNumber","totalPages","Math","ceil","length","handleDelete","id","delete","filter","user","handleEdit","handleAdd","handleSave","newUser","map","Date","now","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","width","borderCollapse","marginBottom","textAlign","backgroundColor","color","border","name","split","email","department","onClick","cursor","Array","from","_","index","margin","borderRadius","onSave","onCancel","display","marginLeft","marginRight","_c","$RefreshReg$"],"sources":["D:/assignment/user-management/src/components/UserList.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>ID</th>\r\n//             <th>First Name</th>\r\n//             <th>Last Name</th>\r\n//             <th>Email</th>\r\n//             <th>Department</th>\r\n//             <th>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td>{user.id}</td>\r\n//               <td>{user.name.split(\" \")[0]}</td>\r\n//               <td>{user.name.split(\" \")[1]}</td>\r\n//               <td>{user.email}</td>\r\n//               <td>{user.department || \"N/A\"}</td>\r\n//               <td>\r\n//                 <button onClick={() => handleEdit(user)}>Edit</button>\r\n//                 <button onClick={() => handleDelete(user.id)}>Delete</button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n\r\n//     <button className=\"btn-add\" onClick={handleAdd}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p className=\"error\">{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n\r\n// const UserList = () => {\r\n//   const [users, setUsers] = useState([]);\r\n//   const [error, setError] = useState(\"\");\r\n//   const [showForm, setShowForm] = useState(false);\r\n//   const [editingUser, setEditingUser] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     const fetchUsers = async () => {\r\n//       try {\r\n//         const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//         setUsers(response.data);\r\n//       } catch (err) {\r\n//         setError(\"Failed to fetch users. Please try again later.\");\r\n//       }\r\n//     };\r\n//     fetchUsers();\r\n//   }, []);\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//       setUsers(users.filter((user) => user.id !== id));\r\n//     } catch {\r\n//       setError(\"Failed to delete the user. Please try again.\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (user) => {\r\n//     setEditingUser(user);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleAdd = () => {\r\n//     setEditingUser(null);\r\n//     setShowForm(true);\r\n//   };\r\n\r\n//   const handleSave = (newUser) => {\r\n//     if (editingUser) {\r\n//       setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//     } else {\r\n//       setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//     }\r\n//     setShowForm(false);\r\n//   };\r\n\r\n//   // Styles\r\n//   const tableStyle = {\r\n//     width: \"100%\",\r\n//     borderCollapse: \"collapse\",\r\n//     marginBottom: \"20px\",\r\n//     overflowX: \"auto\",\r\n//   };\r\n\r\n//   const thStyle = {\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//     padding: \"10px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const tdStyle = {\r\n//     border: \"1px solid #ddd\",\r\n//     padding: \"8px\",\r\n//     textAlign: \"left\",\r\n//   };\r\n\r\n//   const buttonStyle = {\r\n//     padding: \"8px 12px\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"14px\",\r\n//     marginRight: \"5px\",\r\n//   };\r\n\r\n//   const editButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#4CAF50\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const deleteButtonStyle = {\r\n//     ...buttonStyle,\r\n//     backgroundColor: \"#f44336\",\r\n//     color: \"white\",\r\n//   };\r\n\r\n//   const addButtonStyle = {\r\n//     padding: \"10px 20px\",\r\n//     backgroundColor: \"#008CBA\",\r\n//     color: \"white\",\r\n//     borderRadius: \"4px\",\r\n//     border: \"none\",\r\n//     cursor: \"pointer\",\r\n//     fontSize: \"16px\",\r\n//     marginBottom: \"20px\",\r\n//     display: \"block\",\r\n//     marginLeft: \"auto\",\r\n//     marginRight: \"auto\",\r\n//   };\r\n\r\n//   const errorStyle = {\r\n//     color: \"red\",\r\n//     fontSize: \"16px\",\r\n//     textAlign: \"center\",\r\n//     marginTop: \"20px\",\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"20px\" }}>\r\n//       <table style={tableStyle}>\r\n//         <thead>\r\n//           <tr>\r\n//             <th style={thStyle}>ID</th>\r\n//             <th style={thStyle}>First Name</th>\r\n//             <th style={thStyle}>Last Name</th>\r\n//             <th style={thStyle}>Email</th>\r\n//             <th style={thStyle}>Department</th>\r\n//             <th style={thStyle}>Actions</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {users.map((user) => (\r\n//             <tr key={user.id}>\r\n//               <td style={tdStyle}>{user.id}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[0]}</td>\r\n//               <td style={tdStyle}>{user.name.split(\" \")[1]}</td>\r\n//               <td style={tdStyle}>{user.email}</td>\r\n//               <td style={tdStyle}>{user.department || \"N/A\"}</td>\r\n//               <td style={tdStyle}>\r\n//                 <button onClick={() => handleEdit(user)} style={editButtonStyle}>\r\n//                   Edit\r\n//                 </button>\r\n//                 <button onClick={() => handleDelete(user.id)} style={deleteButtonStyle}>\r\n//                   Delete\r\n//                 </button>\r\n//               </td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//       {showForm && (\r\n//         <UserForm\r\n//           user={editingUser}\r\n//           onSave={handleSave}\r\n//           onCancel={() => setShowForm(false)}\r\n//         />\r\n//       )}\r\n//       <button className=\"btn-add\" onClick={handleAdd} style={addButtonStyle}>\r\n//         Add User\r\n//       </button>\r\n//       {error && <p style={errorStyle}>{error}</p>}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import UserForm from \"./UserForm\";\r\n// import './UserList.css';  // Import the external CSS file\r\n\r\n// const UserList = () => {\r\n//     const [users, setUsers] = useState([]);\r\n//     const [error, setError] = useState(\"\");\r\n//     const [showForm, setShowForm] = useState(false);\r\n//     const [editingUser, setEditingUser] = useState(null);\r\n\r\n//     useEffect(() => {\r\n//         const fetchUsers = async () => {\r\n//             try {\r\n//                 const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n//                 setUsers(response.data);\r\n//             } catch (err) {\r\n//                 setError(\"Failed to fetch users. Please try again later.\");\r\n//             }\r\n//         };\r\n//         fetchUsers();\r\n//     }, []);\r\n\r\n//     const handleDelete = async (id) => {\r\n//         try {\r\n//             await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n//             setUsers(users.filter((user) => user.id !== id));\r\n//         } catch {\r\n//             setError(\"Failed to delete the user. Please try again.\");\r\n//         }\r\n//     };\r\n\r\n//     const handleEdit = (user) => {\r\n//         setEditingUser(user);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleAdd = () => {\r\n//         setEditingUser(null);\r\n//         setShowForm(true);\r\n//     };\r\n\r\n//     const handleSave = (newUser) => {\r\n//         if (editingUser) {\r\n//             setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n//         } else {\r\n//             setUsers([...users, { ...newUser, id: Date.now() }]);\r\n//         }\r\n//         setShowForm(false);\r\n//     };\r\n\r\n//     return (\r\n//         <div className=\"user-list-container\">\r\n//             <h2>User List</h2>\r\n\r\n//             <table className=\"user-table\">\r\n//                 <thead>\r\n//                     <tr>\r\n//                         <th>ID</th>\r\n//                         <th>First Name</th>\r\n//                         <th>Last Name</th>\r\n//                         <th>Email</th>\r\n//                         <th>Department</th>\r\n//                         <th>Actions</th>\r\n//                     </tr>\r\n//                 </thead>\r\n//                 <tbody>\r\n//                     {users.map((user) => (\r\n//                         <tr key={user.id}>\r\n//                             <td>{user.id}</td>\r\n//                             <td>{user.name.split(\" \")[0]}</td>\r\n//                             <td>{user.name.split(\" \")[1]}</td>\r\n//                             <td>{user.email}</td>\r\n//                             <td>{user.department || \"N/A\"}</td>\r\n//                             <td>\r\n//                                 <button onClick={() => handleEdit(user)} className=\"edit-btn\">Edit</button>\r\n//                                 <button onClick={() => handleDelete(user.id)} className=\"delete-btn\">Delete</button>\r\n//                             </td>\r\n//                         </tr>\r\n//                     ))}\r\n//                 </tbody>\r\n//             </table>\r\n//             {showForm && (\r\n//                 <UserForm\r\n//                     user={editingUser}\r\n//                     onSave={handleSave}\r\n//                     onCancel={() => setShowForm(false)}\r\n//                 />\r\n//             )}\r\n//             <button onClick={handleAdd} className=\"add-btn\">Add User</button>\r\n//             {error && <p className=\"error-message\">{error}</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default UserList;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport UserForm from \"./UserForm\";\r\n\r\nconst UserList = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [showForm, setShowForm] = useState(false);\r\n  const [editingUser, setEditingUser] = useState(null);\r\n\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [usersPerPage] = useState(5); // Show 5 users per page\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        setUsers(response.data);\r\n      } catch (err) {\r\n        setError(\"Failed to fetch users. Please try again later.\");\r\n      }\r\n    };\r\n    fetchUsers();\r\n  }, []);\r\n\r\n  // Get the current users to display based on the page\r\n  const indexOfLastUser = currentPage * usersPerPage;\r\n  const indexOfFirstUser = indexOfLastUser - usersPerPage;\r\n  const currentUsers = users.slice(indexOfFirstUser, indexOfLastUser);\r\n\r\n  // Handle page change\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Total number of pages\r\n  const totalPages = Math.ceil(users.length / usersPerPage);\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      setUsers(users.filter((user) => user.id !== id));\r\n    } catch {\r\n      setError(\"Failed to delete the user. Please try again.\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (user) => {\r\n    setEditingUser(user);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    setEditingUser(null);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleSave = (newUser) => {\r\n    if (editingUser) {\r\n      setUsers(users.map((user) => (user.id === newUser.id ? newUser : user)));\r\n    } else {\r\n      setUsers([...users, { ...newUser, id: Date.now() }]);\r\n    }\r\n    setShowForm(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>User List</h2>\r\n      <table style={{ width: \"100%\", borderCollapse: \"collapse\", marginBottom: \"20px\" }}>\r\n        <thead>\r\n          <tr>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>ID</th>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>First Name</th>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>Last Name</th>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>Email</th>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>Department</th>\r\n            <th style={{ padding: \"10px\", textAlign: \"left\", backgroundColor: \"#4CAF50\", color: \"white\" }}>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentUsers.map((user) => (\r\n            <tr key={user.id}>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>{user.id}</td>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>{user.name.split(\" \")[0]}</td>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>{user.name.split(\" \")[1]}</td>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>{user.email}</td>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>{user.department || \"N/A\"}</td>\r\n              <td style={{ padding: \"8px\", border: \"1px solid #ddd\" }}>\r\n                <button onClick={() => handleEdit(user)} style={{ backgroundColor: \"#4CAF50\", color: \"white\", padding: \"8px 12px\", cursor: \"pointer\" }}>Edit</button>\r\n                <button onClick={() => handleDelete(user.id)} style={{ backgroundColor: \"#f44336\", color: \"white\", padding: \"8px 12px\", cursor: \"pointer\" }}>Delete</button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n\r\n      {/* Pagination Buttons */}\r\n      <div style={{ textAlign: \"center\" }}>\r\n        {Array.from({ length: totalPages }, (_, index) => (\r\n          <button\r\n            key={index}\r\n            onClick={() => paginate(index + 1)}\r\n            style={{\r\n              padding: \"8px 12px\",\r\n              margin: \"0 5px\",\r\n              cursor: \"pointer\",\r\n              backgroundColor: \"#008CBA\",\r\n              color: \"white\",\r\n              borderRadius: \"4px\",\r\n            }}\r\n          >\r\n            {index + 1}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {showForm && (\r\n        <UserForm\r\n          user={editingUser}\r\n          onSave={handleSave}\r\n          onCancel={() => setShowForm(false)}\r\n        />\r\n      )}\r\n      <button onClick={handleAdd} style={{ padding: \"10px 20px\", backgroundColor: \"#008CBA\", color: \"white\", borderRadius: \"4px\", margin: \"20px 0\", display: \"block\", marginLeft: \"auto\", marginRight: \"auto\" }}>\r\n        Add User\r\n      </button>\r\n      {error && <p style={{ color: \"red\", textAlign: \"center\" }}>{error}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserList;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}